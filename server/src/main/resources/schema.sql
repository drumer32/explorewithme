CREATE TABLE IF NOT EXISTS users
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    status VARCHAR(512)                           NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS category
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                             NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT uc_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS location
(
    id  INT AUTO_INCREMENT NOT NULL,
    lat INT,
    lon INT,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(255),
    category           INT,
    confirmed_requests INT,
    created_on         TIMESTAMP,
    description        VARCHAR(255),
    event_date         TIMESTAMP,
    location_id        INT,
    initiator          INT,
    paid               BOOLEAN            NOT NULL,
    participant_limit  INT,
    published_on       VARCHAR(255),
    request_moderation BOOLEAN            NOT NULL,
    state              INT,
    title              VARCHAR(255),
    views              INT,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT INITIATOR FOREIGN KEY (initiator) REFERENCES users (id),
    CONSTRAINT CATEGORY FOREIGN KEY (category) REFERENCES category (id)
);


CREATE TABLE IF NOT EXISTS requests
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created        TIMESTAMP,
    event          INT,
    requester      INT,
    request_status INT,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    UNIQUE (requester, event),
    CONSTRAINT REQUESTER FOREIGN KEY (requester) REFERENCES users (id),
    CONSTRAINT EVENT FOREIGN KEY (event) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN            NOT NULL,
    title  VARCHAR(255),
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id          INT AUTO_INCREMENT NOT NULL,
    text VARCHAR(255),
    created     TIMESTAMP,
    CONSTRAINT pk_comments PRIMARY KEY (id)
);


